
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler

CHOOSING, QUESTIONS, CONTACT = range(3)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    reply_keyboard = [['ü§ñ –•–æ—á—É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞']]
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã –≤ LDN AI Studio.\n\n"
        "–ú—ã —Å–æ–∑–¥–∞—ë–º –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–≤ –¥–ª—è Telegram, —Å–∞–π—Ç–æ–≤ –∏ –±–∏–∑–Ω–µ—Å–∞:\n"
        "‚Äì –£–º–Ω—ã–µ —á–∞—Ç-–±–æ—Ç—ã\n‚Äì –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
        "‚Äì –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM, –¥–æ—Å—Ç–∞–≤–∫–æ–π, Notion, Google Sheets\n"
        "‚Äì –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –∑–∞–¥–∞—á–∏ –∫–ª–∏–µ–Ω—Ç–∞\n\n"
        "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –ø–æ–¥–æ–π–¥—ë—Ç –ª–∏ –ò–ò –¥–ª—è —Ç–≤–æ–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞?\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True),
    )
    return CHOOSING

async def handle_choice(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text(
        "–û—Ç–ª–∏—á–Ω–æ! –ß—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–º –ª—É—á—à–µ–µ —Ä–µ—à–µ–Ω–∏–µ, —É—Ç–æ—á–Ω—é –ø–∞—Ä—É –º–æ–º–µ–Ω—Ç–æ–≤ üëá\n\n"
        "1Ô∏è‚É£ –ì–¥–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞?\n"
        "(–Ω–∞–ø—Ä–∏–º–µ—Ä: Telegram, —Å–∞–π—Ç, WhatsApp, CRM...)\n\n"
        "2Ô∏è‚É£ –ß—Ç–æ –æ–Ω –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å –¥–µ–ª–∞—Ç—å?\n"
        "(–ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã, –æ—Ñ–æ—Ä–º–ª—è—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É, –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥, –¥–∞–≤–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏ —Ç.–¥.)\n\n"
        "3Ô∏è‚É£ –ù—É–∂–Ω—ã –ª–∏ –≤–∞–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏?\n"
        "(–Ω–∞–ø—Ä–∏–º–µ—Ä: —Å –ù–æ–≤–æ–π –ü–æ—á—Ç–æ–π, Google –¢–∞–±–ª–∏—Ü–µ–π, Bitrix24...)\n\n"
        "4Ô∏è‚É£ –ß—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –≤ —Ä–∞–±–æ—Ç–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞?\n"
        "(—Å–∫–æ—Ä–æ—Å—Ç—å, —Ç–æ—á–Ω–æ—Å—Ç—å, –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ —Ç.–¥.)\n\n"
        "‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏–ª–∏ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏."
    )
    return QUESTIONS

async def handle_questions(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    context.user_data['answers'] = update.message.text
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –æ—Å—Ç–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ ‚Äî –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏:\n\n"
        "‚Äì –ò–º—è\n‚Äì Telegram @—é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n‚Äì –£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–≤—è–∑–∏"
    )
    return CONTACT

async def handle_contact(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    answers = context.user_data.get('answers', '')
    contact_info = update.message.text
    summary = f"üßæ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å:\n\nüìå –û—Ç–≤–µ—Ç—ã:\n{answers}\n\nüìá –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n{contact_info}"
    
    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")
    await update.message.reply_text(summary)
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    await update.message.reply_text("–†–∞–∑–≥–æ–≤–æ—Ä –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

def main():
    import os
    TOKEN = os.environ.get("BOT_TOKEN")
    app = ApplicationBuilder().token(TOKEN).build()
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            CHOOSING: [MessageHandler(filters.Regex('^(ü§ñ –•–æ—á—É –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞)$'), handle_choice)],
            QUESTIONS: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_questions)],
            CONTACT: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_contact)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )
    app.add_handler(conv_handler)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == '__main__':
    main()
